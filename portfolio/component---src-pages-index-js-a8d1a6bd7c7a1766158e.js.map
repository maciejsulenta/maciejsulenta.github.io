{"version":3,"file":"component---src-pages-index-js-a8d1a6bd7c7a1766158e.js","mappings":"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","sources":["webpack://portfolio-pees/./src/components/Home/Home.js","webpack://portfolio-pees/./src/components/Home/index.jsx","webpack://portfolio-pees/./src/components/Contact/Contact.js","webpack://portfolio-pees/./src/components/Contact/index.jsx","webpack://portfolio-pees/./src/components/Projects/Projects.js","webpack://portfolio-pees/./src/components/Projects/index.jsx","webpack://portfolio-pees/./src/pages/index.js"],"sourcesContent":["import styled from \"styled-components\";\r\nimport { theme } from \"../../helpers/theme\";\r\n\r\nexport const Container = styled.section`\r\n  width: 100%;\r\n  min-height: 100vh;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  flex-wrap: wrap;\r\n  word-wrap: break-word;\r\n  opacity: 0;\r\n  position: relative;\r\n  @media screen and (min-width: 1280px) {\r\n  }\r\n`;\r\n\r\nexport const FirstPartWrapper = styled.div`\r\n  width: 100%;\r\n  height: 100%;\r\n  position: absolute;\r\n  left: 0;\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  @media screen and (min-width: 768px) {\r\n    align-items: center;\r\n    text-align: center;\r\n  }\r\n`;\r\n\r\nexport const TextWrapper = styled.div``;\r\n\r\nexport const Paragraph = styled.p`\r\n  overflow: hidden;\r\n`;\r\n\r\nexport const Text = styled.span`\r\n  display: block;\r\n  position: relative;\r\n  font-family: ${({ theme }) => theme.ff.po};\r\n  font-weight: ${({ theme }) => theme.fw.b};\r\n  font-size: calc(${({ theme }) => theme.fs.xl} * 1.5);\r\n  @media screen and (min-width: 768px) {\r\n    font-size: calc(${({ theme }) => theme.fs.xl} * 1.75);\r\n  }\r\n  @media screen and (min-width: 1280px) {\r\n    font-size: calc(${({ theme }) => theme.fs.xl} * 2);\r\n  }\r\n`;\r\n\r\nexport const SecondPartWrapper = styled.div`\r\n  width: 100%;\r\n  height: 100%;\r\n  display: flex;\r\n  align-items: center;\r\n  position: absolute;\r\n  left: 0;\r\n  @media screen and (min-width: 768px) {\r\n    align-items: center;\r\n    text-align: center;\r\n    justify-content: center;\r\n  }\r\n\r\n  @media screen and (min-width: 1800px) {\r\n    padding: 0 10vw;\r\n  }\r\n`;\r\n\r\nexport const SecondPartText = styled(Text)`\r\n  font-size: calc(${({ theme }) => theme.fs.xl} * 1);\r\n  word-break: break-all;\r\n  @media screen and (min-width: 550px) {\r\n    font-size: calc(${({ theme }) => theme.fs.xl} * 1.25);\r\n  }\r\n  @media screen and (min-width: 768px) {\r\n    font-size: calc(${({ theme }) => theme.fs.xl} * 1.5);\r\n  }\r\n\r\n  @media screen and (min-width: 1280px) {\r\n    font-size: calc(${({ theme }) => theme.fs.xl} * 1.75);\r\n  }\r\n`;\r\n","import React, { useEffect, useRef } from \"react\";\r\nimport gsap from \"gsap-trial\";\r\nimport SplitText from \"../../utils/Split3.min\";\r\nimport {\r\n  Container,\r\n  FirstPartWrapper,\r\n  TextWrapper,\r\n  Paragraph,\r\n  Text,\r\n  SecondPartWrapper,\r\n  SecondPartText,\r\n} from \"./Home\";\r\n\r\nconst Home = () => {\r\n  const ref = useRef();\r\n  useEffect(() => {\r\n    let first = gsap.timeline({\r\n      defaults: {\r\n        ease: \"inOut\",\r\n        delay: 0.25,\r\n        stagger: 0.2,\r\n      },\r\n      repeat: -1,\r\n      onStart() {\r\n        gsap.set(ref.current, {\r\n          autoAlpha: 1,\r\n        });\r\n      },\r\n    });\r\n\r\n    let splitPartTwoText = new SplitText(\"#second-text\");\r\n    first\r\n      .from(\"#first-text\", {\r\n        skewY: 6,\r\n        duration: 1,\r\n        yPercent: 150,\r\n      })\r\n      .to(\r\n        \"#first-text\",\r\n        {\r\n          skewY: 3,\r\n          duration: 1,\r\n          yPercent: -150,\r\n        },\r\n        \"+=2\"\r\n      )\r\n      .from(splitPartTwoText.lines, {\r\n        opacity: 0,\r\n        duration: 3,\r\n      })\r\n      .to(splitPartTwoText.lines, {\r\n        opacity: 1,\r\n        delay: 7,\r\n      })\r\n      .to(splitPartTwoText.lines, {\r\n        opacity: 0,\r\n      });\r\n  }, []);\r\n  return (\r\n    <Container ref={ref} id=\"home\">\r\n      <FirstPartWrapper>\r\n        <TextWrapper>\r\n          <Paragraph>\r\n            <Text id=\"first-text\"> Mushouse </Text>\r\n          </Paragraph>\r\n        </TextWrapper>\r\n        <TextWrapper>\r\n          <Paragraph>\r\n            <Text id=\"first-text\"> Mushouse </Text>\r\n          </Paragraph>\r\n        </TextWrapper>\r\n        <TextWrapper>\r\n          <Paragraph>\r\n            <Text id=\"first-text\"> Mushouse </Text>\r\n          </Paragraph>\r\n        </TextWrapper>\r\n      </FirstPartWrapper>\r\n      <SecondPartWrapper>\r\n        <TextWrapper>\r\n          <Paragraph>\r\n            <SecondPartText id=\"second-text\">\r\n              Projektujemy oraz wdrażamy strony internetowe. Zajmujemy się\r\n              również tworzeniem różnego rodzaju materiałów graficznych.</SecondPartText>\r\n          </Paragraph>\r\n        </TextWrapper>\r\n      </SecondPartWrapper>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","import styled from \"styled-components\";\r\nimport { theme } from \"../../helpers/theme\";\r\n\r\nexport const Container = styled.section`\r\n  width: 100%;\r\n  display: grid;\r\n  grid-template-columns: 1fr;\r\n  place-items: start;\r\n  gap: 5rem 0;\r\n  font-family: ${({ theme }) => theme.ff.sg};\r\n  /* padding: 0 5vw; */\r\n\r\n  @media screen and (min-width: 1280px) {\r\n    /* padding: 0 10vw; */\r\n  }\r\n`;\r\n\r\nexport const Title = styled.p`\r\n  font-weight: ${({ theme }) => theme.fw.s};\r\n  font-family: ${({ theme }) => theme.ff.bai};\r\n  & > div {\r\n    font-size: calc(${({ theme }) => theme.fs.xl}*5);\r\n    background: linear-gradient(\r\n      to right,\r\n      #ffff 50%,\r\n      rgba(37, 37, 37, 0.15) 50%\r\n    );\r\n    background-size: 300% 100%;\r\n    background-position-x: 100%;\r\n    color: transparent;\r\n    background-clip: text;\r\n    -webkit-background-clip: text;\r\n    line-height: 1.2;\r\n\r\n    @media screen and (min-width: 768px) {\r\n      font-size: calc(${({ theme }) => theme.fs.xl}*6);\r\n    }\r\n\r\n    @media screen and (min-width: 1230px) {\r\n      font-size: calc(${({ theme }) => theme.fs.xl}*8);\r\n    }\r\n  }\r\n\r\n  wbr {\r\n    display: none;\r\n  }\r\n`;\r\n\r\nexport const InfoWrapper = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 3rem 0;\r\n  margin-bottom: 100px;\r\n\r\n  @media screen and (min-width: 768px) {\r\n    width: 100%;\r\n    gap: 0 5rem;\r\n    flex-direction: row;\r\n    justify-content: flex-end;\r\n  }\r\n`;\r\n\r\nexport const Wrapper = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 1rem 0;\r\n`;\r\n\r\nexport const DataHeading = styled.h2`\r\n  font-weight: ${({ theme }) => theme.fw.s};\r\n  font-size: ${({ theme }) => theme.fs.xs};\r\n  text-transform: uppercase;\r\n  letter-spacing: 2px;\r\n  @media screen and (min-width: 550px) {\r\n    font-size: ${({ theme }) => theme.fs.s};\r\n  }\r\n`;\r\n\r\nexport const Details = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 0.5rem 0;\r\n  color: ${({ theme }) => theme.colors.white};\r\n  font-weight: ${({ theme }) => theme.fw.l};\r\n  font-size: ${({ theme }) => theme.fs.xs};\r\n  p:nth-child(1) {\r\n    font-weight: ${({ theme }) => theme.fw.m};\r\n    margin-bottom: 0.5rem;\r\n    transition: 0.2s ease-in-out;\r\n    cursor: pointer;\r\n\r\n    &:hover {\r\n      color: ${({ theme }) => theme.colors.whiteAlt};\r\n    }\r\n  }\r\n  @media screen and (min-width: 550px) {\r\n    font-size: ${({ theme }) => theme.fs.s};\r\n  }\r\n  @media screen and (min-width: 768px) {\r\n    font-size: ${({ theme }) => theme.fs.xs};\r\n  }\r\n`;\r\n\r\nexport const Socials = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 0.5rem 0;\r\n\r\n  a {\r\n    text-decoration: none;\r\n    color: ${({ theme }) => theme.colors.white};\r\n    font-weight: ${({ theme }) => theme.fw.l};\r\n    text-decoration: underline;\r\n    text-underline-offset: 2px;\r\n    transition: 0.2s ease-in-out;\r\n\r\n    &:hover {\r\n      color: ${({ theme }) => theme.colors.black};\r\n    }\r\n  }\r\n`;\r\n","import gsap from \"gsap-trial\";\r\nimport ScrollTrigger from \"gsap-trial/ScrollTrigger\";\r\nimport SplitText from \"../../utils/Split3.min\";\r\nimport React, { useEffect, useRef } from \"react\";\r\nimport {\r\n  Container,\r\n  Title,\r\n  InfoWrapper,\r\n  Wrapper,\r\n  DataHeading,\r\n  Details,\r\n  Socials,\r\n} from \"./Contact\";\r\n\r\nconst Contact = () => {\r\n  const ref = useRef(null);\r\n  const detailsRef = useRef(null);\r\n  useEffect(() => {\r\n    gsap.config({ trialWarn: false });\r\n    gsap.registerPlugin(ScrollTrigger);\r\n    const split = new SplitText(ref.current, {\r\n      type: \"lines\",\r\n    });\r\n\r\n    gsap.from(detailsRef.current, {\r\n      duration: 1,\r\n      y: 100,\r\n      autoAlpha: 0,\r\n      ease: \"inOut\",\r\n      stagger: 0.05,\r\n      scrollTrigger: {\r\n        trigger: detailsRef.current,\r\n        scrub: 1,\r\n        start: \"top bottom\",\r\n        end: \"bottom bottom\",\r\n      },\r\n    });\r\n\r\n    split.lines.forEach((target) => {\r\n      gsap.from(target, {\r\n        duration: 0.25,\r\n        y: -200,\r\n        autoAlpha: 0,\r\n        ease: \"inOut\",\r\n        stagger: 0.05,\r\n        scrollTrigger: {\r\n          trigger: target,\r\n          scrub: 1,\r\n          start: \"top 65%\",\r\n          end: \"bottom center\",\r\n        },\r\n      });\r\n      gsap.to(target, {\r\n        backgroundPositionX: 0,\r\n        ease: \"none\",\r\n        scrollTrigger: {\r\n          trigger: target,\r\n          scrub: 1,\r\n          start: \"top center\",\r\n          end: \"bottom center\",\r\n        },\r\n      });\r\n    });\r\n  }, []);\r\n  return (\r\n    <>\r\n      <Container>\r\n        <Title ref={ref}>\r\n          Ode\r\n          <wbr />\r\n          zwij\r\n          <wbr /> się\r\n          <wbr /> do\r\n          <wbr /> nas!\r\n        </Title>\r\n        <InfoWrapper ref={detailsRef}>\r\n          <Wrapper>\r\n            <DataHeading>Pozostańmy w kontakcie</DataHeading>\r\n            <Details>\r\n              <p>kontakt@mushouse.pl</p>\r\n              <p>Adrian</p>\r\n              <p>+48 XXX XXX XXX</p>\r\n              <p>Maciek</p>\r\n              <p>+48 XXX XXX XXX</p>\r\n            </Details>\r\n          </Wrapper>\r\n          <Wrapper name=\"contact\" id=\"contact\">\r\n            <DataHeading>Jesteśmy też na</DataHeading>\r\n            <Socials>\r\n              <a\r\n                href=\"https://facebook.com/mushousepl\"\r\n                target=\"_blank\"\r\n                className=\"contact__link link\"\r\n                style={{ cursor: \"none\" }}\r\n              >\r\n                Facebook\r\n              </a>\r\n              <a\r\n                href=\"https://twitter.com/mushousepl\"\r\n                target=\"_blank\"\r\n                className=\"contact__link link\"\r\n                style={{ cursor: \"none\" }}\r\n              >\r\n                Twitter\r\n              </a>\r\n              <a\r\n                href=\"https://instagram.com/mushousepl\"\r\n                target=\"_blank\"\r\n                className=\"contact__link link\"\r\n                style={{ cursor: \"none\" }}\r\n              >\r\n                Instagram\r\n              </a>\r\n              <a\r\n                href=\"https://dribbble.com/mushousepl\"\r\n                target=\"_blank\"\r\n                className=\"contact__link link\"\r\n                style={{ cursor: \"none\" }}\r\n              >\r\n                Dribbble\r\n              </a>\r\n            </Socials>\r\n          </Wrapper>\r\n        </InfoWrapper>\r\n      </Container>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Contact;\r\n","import styled from \"styled-components\";\r\nimport { theme } from \"../../helpers/theme\";\r\nimport { Link } from \"gatsby\";\r\n\r\nexport const Container = styled.section`\r\n  width: 100%;\r\n  min-height: 100vh;\r\n  position: relative;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  justify-content: center;\r\n  gap: 5rem 0;\r\n  padding: 100px 0;\r\n\r\n  @media screen and (min-width: 1280px) {\r\n    padding: 100px 0;\r\n  }\r\n`;\r\n\r\nexport const GalleryItems = styled.div`\r\n  width: 100%;\r\n  height: 100%;\r\n  display: grid;\r\n  grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));\r\n  place-items: center;\r\n  gap: 1rem;\r\n  position: relative;\r\n`;\r\n\r\nexport const StyledLink = styled(Link)`\r\ncursor: none;\r\n  width: min(100%, 550px);\r\n  height: 450px;\r\n  filter: grayscale(80%) brightness(85%);\r\n  transition: all 0.25s ease-in-out;\r\n  border-radius: 20px;\r\n  position: relative;\r\n  &:hover {\r\n    filter: none;\r\n    transform: scale(1.02);\r\n    -webkit-box-shadow: 0px 0px 47px -25px rgba(173, 173, 173, 1);\r\n    -moz-box-shadow: 0px 0px 47px -25px rgba(173, 173, 173, 1);\r\n    box-shadow: 0px 0px 47px -25px rgba(173, 173, 173, 1);\r\n  }\r\n\r\n  img {\r\n    width: min(100%, 550px);\r\n    height: min(100%, 450px);\r\n    border-radius: 20px;\r\n    object-fit: cover;\r\n  }\r\n`;\r\n\r\nexport const Heading = styled.h2`\r\n  width: 100%;\r\n  font-family: ${({ theme }) => theme.ff.bai};\r\n  font-size: calc(${({ theme }) => theme.fs.xl} * 2);\r\n\r\n  @media screen and (min-width: 768px) {\r\n    font-size: calc(${({ theme }) => theme.fs.xl} * 3);\r\n    text-align: center;\r\n  }\r\n`;\r\n","import React, { useEffect, useRef, useState } from \"react\";\r\nimport { gsap } from \"gsap-trial\";\r\nimport ScrollTrigger from \"gsap-trial/ScrollTrigger\";\r\nimport SplitText from \"../../utils/Split3.min\";\r\nimport { Container, Heading, GalleryItems, StyledLink } from \"./Projects\";\r\n\r\nconst Projects = ({ nodes }) => {\r\n  const headingRef = useRef();\r\n  const galleryRef = useRef();\r\n  useEffect(() => {\r\n    gsap.registerPlugin(ScrollTrigger);\r\n    let proxy = { skew: 0 },\r\n      skewSetter = gsap.quickSetter(\"#skewElem\", \"skewY\", \"deg\"),\r\n      clamp = gsap.utils.clamp(-2, 2);\r\n    let splitheading = new SplitText(headingRef.current);\r\n\r\n    gsap.from(splitheading.chars, {\r\n      y: -50,\r\n      autoAlpha: 0,\r\n      stagger: 0.1,\r\n      scrollTrigger: {\r\n        scrub: true,\r\n        trigger: headingRef.current,\r\n        start: \"top 90%\",\r\n        end: \"bottom 50%\",\r\n      },\r\n    });\r\n\r\n    ScrollTrigger.create({\r\n      onUpdate: (self) => {\r\n        let skew = clamp(self.getVelocity() / -300);\r\n        if (Math.abs(skew) > Math.abs(proxy.skew)) {\r\n          proxy.skew = skew;\r\n          gsap.to(proxy, {\r\n            skew: 0,\r\n            duration: 0.5,\r\n            ease: \"power3\",\r\n            overwrite: true,\r\n            onUpdate: () => skewSetter(proxy.skew),\r\n          });\r\n        }\r\n      },\r\n    });\r\n\r\n    gsap.set(\"#image\", { opacity: 0, y: 50 });\r\n\r\n    ScrollTrigger.batch(\"#image\", {\r\n      onEnter: (batch) =>\r\n        gsap.to(batch, {\r\n          y: 0,\r\n          opacity: 1,\r\n          stagger: { each: 0.2 },\r\n          scrollTrigger: {\r\n            scrub: true,\r\n            trigger: \"#gallery\",\r\n            start: \"top 70%\",\r\n            end: \"center 70%\",\r\n          },\r\n        }),\r\n    });\r\n    gsap.set(\"#skewElem\", { transformOrigin: \"right center\", force3D: true });\r\n  }, []);\r\n\r\n  const projectsList = nodes.reverse();\r\n  return (\r\n    <>\r\n      <Container name=\"projects\" id=\"projects\">\r\n        <Heading ref={headingRef}>Nasze realizacje</Heading>\r\n        <GalleryItems ref={galleryRef} id=\"gallery\">\r\n          {projectsList.map((item) => (\r\n            <StyledLink\r\n              className=\"link\"\r\n              to={`/realizacje/${item.slug}`}\r\n              key={item.image.url}\r\n              id=\"image\"\r\n            >\r\n              <img src={item.image.url} id=\"skewElem\" />\r\n            </StyledLink>\r\n          ))}\r\n        </GalleryItems>\r\n      </Container>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Projects;\r\n","import React, { useEffect } from \"react\";\r\nimport { GlobalStyles } from \"../helpers/GlobalStyles\";\r\nimport { theme } from \"../helpers/theme\";\r\nimport { ThemeProvider } from \"styled-components\";\r\nimport Cursor from \"../components/Cursor\";\r\nimport Header from \"../components/Header\";\r\nimport Home from \"../components/Home\";\r\nimport Contact from \"../components/Contact\";\r\nimport Projects from \"../components/Projects\";\r\nimport { graphql } from \"gatsby\";\r\nimport gsap from \"gsap-trial\";\r\nimport ScrollSmoother from \"gsap-trial/ScrollSmoother\";\r\nimport ScrollTrigger from \"gsap-trial/ScrollTrigger\";\r\nimport styled from \"styled-components\";\r\n\r\nconst StyledSmoothContainer = styled.div`\r\n  padding: 0 5vw;\r\n\r\n  @media screen and (min-width: 1024px) {\r\n    padding: 0 10vw;\r\n  }\r\n`;\r\n\r\nconst IndexPage = ({\r\n  data: {\r\n    allDatoCmsProject: { nodes },\r\n  },\r\n}) => {\r\n  // useEffect(() => {\r\n  // \tgsap.registerPlugin(ScrollTrigger, ScrollSmoother);\r\n\r\n  // \tlet smoother = ScrollSmoother.create({\r\n  // \t\tcontent: '#smooth-content',\r\n  // \t\teffects: true,\r\n  // \t\tsmooth: 0.3,\r\n  // \t\tsmoothTouch: 0.1,\r\n  // \t});\r\n  // }, []);\r\n  return (\r\n    <ThemeProvider theme={theme}>\r\n      <GlobalStyles />\r\n      <Cursor />\r\n      <Header />\r\n      {/* <StyledSmoothContainer id=\"smooth-content\"> */}\r\n      <Home />\r\n      <Projects nodes={nodes} />\r\n      <Contact />\r\n      {/* </StyledSmoothContainer> */}\r\n    </ThemeProvider>\r\n  );\r\n};\r\n\r\nexport default IndexPage;\r\n\r\nexport const query = graphql`\r\n  query {\r\n    allDatoCmsProject {\r\n      nodes {\r\n        id\r\n        info\r\n        image {\r\n          filename\r\n          url\r\n          title\r\n        }\r\n        title\r\n        slug\r\n      }\r\n    }\r\n  }\r\n`;\r\n"],"names":["Container","styled","FirstPartWrapper","TextWrapper","Paragraph","Text","theme","ff","po","fw","b","fs","xl","SecondPartWrapper","SecondPartText","ref","useRef","useEffect","first","gsap","defaults","ease","delay","stagger","repeat","onStart","current","autoAlpha","splitPartTwoText","SplitText","from","skewY","duration","yPercent","to","lines","opacity","id","sg","Title","s","bai","InfoWrapper","Wrapper","DataHeading","xs","Details","colors","white","l","m","whiteAlt","Socials","black","detailsRef","trialWarn","ScrollTrigger","split","type","y","scrollTrigger","trigger","scrub","start","end","forEach","target","backgroundPositionX","name","href","className","style","cursor","GalleryItems","StyledLink","Link","Heading","nodes","headingRef","galleryRef","proxy","skew","skewSetter","clamp","splitheading","chars","onUpdate","self","getVelocity","Math","abs","overwrite","onEnter","batch","each","transformOrigin","force3D","projectsList","reverse","map","item","slug","key","image","url","src","data","allDatoCmsProject","ThemeProvider","GlobalStyles","Cursor","Header"],"sourceRoot":""}